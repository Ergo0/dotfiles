LPServer.emergencyAccess=function(){var e,r,a,n,s="legacy_helper.php",c="lmiapi/emergency-access",i=function(e){var r=new LPServer.ext.RSAKey;LPServer.ext.parsePublicKey(r,e.params.recipient.publickey);var a=r.encrypt(LPServer.ext.bin2hex(LPServer.ext.getLocalKey()));LPServer.jsonRequest({url:s,data:{action:"update_sharee",semail:e.params.recipient.username,enc_key:a,prio:1,hours:e.params.recipient.hours_to_override},userSupplied:e})},t=(e=function(e,r){e.errors instanceof Array&&e.errors.length>0?r.callbacks&&r.callbacks.nosharingkeys?r.callbacks.nosharingkeys(e,r):r.error("nosharingkeys"):e.noemail instanceof Array&&e.noemail.length>0?(r.callbacks&&r.callbacks.invite&&r.callbacks.invite({emails:e.noemail}),r.error("")):e[r.params.recipient.username]?(r.params.recipient.publickey=e[r.params.recipient.username],i(r)):r.error()},function(r){LPServer.jsonRequest({url:s,data:{action:"get_pubkey",emails:r.params.recipient.username},success:e,userSupplied:r})}),u=(r=function(e,r){r.callbacks&&r.callbacks.successGranted&&r.callbacks.successGranted(e,r)},a=function(e,r){r.callbacks&&r.callbacks.successLinked&&r.callbacks.successLinked(e,r)},n=function(e,r){var n=new LPServer.ext.RSAKey;LPServer.ext.parsePrivateKey(n);var c=n.decrypt(e.enc_key);LPServer.xmlRequest({url:s,data:{action:"link",name:r.params.sharer.username,legacy:1,sharekey:e.enc_key,sharename:LPServer.ext.encrypt(r.params.sharer.username,LPServer.ext.hex2bin(c))},callbacks:{ok:a},userSupplied:r})},function(e){LPServer.jsonRequest({url:s,data:{action:"confirm",lemail:e.params.sharer.username},callbacks:{success:r,allowed:n},userSupplied:e})}),l=function(e){if(!e||!e.length||!g_uid)return!1;LPServer.lmiapi.jsonRequest({url:c+"/sharees",method:"POST",data:e})},o=function(e,r){LPServer.lmiapi.jsonRequest({url:c+"/sharees",type:"GET",contentType:"application/json",dataType:"json",success:function(r){e&&e(r)},error:function(e){"undefined"!=typeof Raven&&Raven.captureException(e,{extra:{uid:g_uid}}),r&&r()}})};return{updateRecipient:i,addRecipient:t,removeRecipient:function(e){LPServer.jsonRequest({url:s,data:{action:"revoke_offer",email:e.params.email},userSupplied:e})},getRecipientInfo:function(e){LPServer.jsonRequest({url:s,data:{action:"get_sharees",lemail:e.params.email},userSupplied:e})},getSharerInfo:function(e){LPServer.jsonRequest({url:s,data:{action:"get_sharers"},userSupplied:e})},acceptOffer:function(e){LPServer.jsonRequest({url:s,data:{action:"accept_offer",email:e.params.sharer.username},userSupplied:e})},declineOffer:function(e){LPServer.jsonRequest({url:s,data:{action:"decline_offer",email:e.params.email},userSupplied:e})},requestAccess:u,denyAccess:function(e){LPServer.jsonRequest({url:s,data:{action:"deny_access",email:e.params.email},userSupplied:e})},unlinkAccount:function(e){LPServer.jsonRequest({url:s,data:{action:"unlink",lemail:e.params.email},userSupplied:e})},updateShareeKey:l,getEmergencyAccessShareeData:o,checkEmergencyAccessHealth:function(){o(function(e){if(e){var r=[];e.forEach(function(e){var a=e.publicSharingKey;if(a&&e.updateRequired){var n=new RSAKey;if(parse_public_key(n,a)){var s=n.encrypt(LPServer.ext.bin2hex(LPServer.ext.getLocalKey()));r.push({userId:e.userId,encryptedVaultKey:s})}}}),r.length&&l(r)}})}}}();
//# sourceMappingURL=sourcemaps/serverEmergencyAccess.js.map
